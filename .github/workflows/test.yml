name: Test
on:
  push: { branches: [ "master" ] }
  pull_request: { branches: [ "master" ] }

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with: { submodules: recursive }
      - uses: conda-incubator/setup-miniconda@v2
        with: { miniforge-variant: "Mambaforge", miniforge-version: "latest" }
      - name: install dependencies
        shell: bash -l {0}
        run: |
          mamba env update --quiet -n test -f environment.yml
          conda list
      - name: build standardese
        shell: bash -l {0}
        run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="-pedantic -Wall -Wextra -Wconversion -Wsign-conversion -Wno-parentheses" -DLLVM_CONFIG_BINARY=$LLVM_CONFIG_BINARY ../
          cmake --build .
      - name: test standardese
        shell: bash -l {0}
        run: |
          ./build/tool/standardese --version
          ./build/test/standardese_test

env:
  MAKEFLAGS: -j2
